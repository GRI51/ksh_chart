# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

run-name: Test python files at main branch.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read

jobs:
  build_ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r installation/development.txt
        python -m pip install -r installation/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests --cov=src --cov-report xml
    - name: Create Coverage Comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
          pytest-coverage-path: coverage.xml
          junitxml-path: ./pytest.xml
    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.3.0
      with:
          auth: ${{ secrets.BADGE }} # secretsに設定したトークン名
          gistID: 4ebfb53821948ae141d18fac58571b88
          filename: pytest-coverage-comment.json
          label: Coverage
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python