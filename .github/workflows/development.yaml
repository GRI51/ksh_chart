# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

run-name: Test python files and deploy zip files at development branch.

on:
  push:
    branches:
      - development

permissions:
  contents: write

jobs:
  build_ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r installation/development.txt
        python -m pip install -r installation/requirements.txt
    - name: Lint with PyLint
      run: |
        # exit-zero treats all errors as warnings.
        pylint src/ --exit-zero --rcfile pylintrc
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 src/ --exit-zero --config flake8.ini --verbose
    - name: Lint with mypy
      run: |
        # exit-zero treats all errors as warnings.
        mypy src/ --config-file mypy.ini
    - name: Test with pytest
      run: |
        pytest tests/ --cov --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
    - name: Create Coverage Comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest.xml
    - name: Check the output coverage
      run: |
        pytest tests/
    - name: Delete unuse user effect
      run: |
        PREV_IFS=$IFS
        IFS="
        "
        for file in `\find src/songs/ -name '*.ksh'`
        do
            IFS=$PREV_IFS
            python src/delete_usereffect.py "${file}"
        done
        PREV_IFS=$IFS
        IFS="
        "
        for file in `\find src/packages/ -name '*.ksh'`
        do
            IFS=$PREV_IFS
            python src/delete_usereffect.py "${file}"
        done
    - name: Create zip files
      run: |
        python src/tozip.py
    - name: Push generated zip files
      # if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        git config user.name auto-push
        git config user.email auto-push@example.com
        git add docs/assets/
        git commit -m "auto push from ci" || echo no commits
        git push
